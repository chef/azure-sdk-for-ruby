# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ADHybridHealthService::Mgmt::V2014_01_01
  module Models
    #
    # The import error details.
    #
    class ImportError

      include MsRestAzure

      # @return [String] The error Id.
      attr_accessor :id

      # @return [String] The run step result Id.
      attr_accessor :run_step_result_id

      # @return [String] The connector Id.
      attr_accessor :connector_id

      # @return [String] The type of error.
      attr_accessor :type

      # @return [DateTime] The time when the import error occurred.
      attr_accessor :time_occurred

      # @return [DateTime] The time when the import error first occurred.
      attr_accessor :time_first_occurred

      # @return [Integer] The retry count.
      attr_accessor :retry_count

      # @return [AlgorithmStepType] The operation type specific  to error
      # reporting. Possible values include: 'Undefined', 'Staging',
      # 'ConnectorFilter', 'Join', 'Projection', 'ImportFlow', 'Provisioning',
      # 'ValidateConnectorFilter', 'Deprovisioning', 'ExportFlow',
      # 'MvDeletion', 'Recall', 'MvObjectTypeChange'
      attr_accessor :algorithm_step_type

      # @return [ChangeNotReimported] The change details that is not
      # re-imported.
      attr_accessor :change_not_reimported

      # @return [ExtensionErrorInfo] The extension error information.
      attr_accessor :extension_error_info

      # @return [RuleErrorInfo] The error details in legacy rule processing.
      attr_accessor :rule_error_info

      # @return [String] The object Id.
      attr_accessor :cs_object_id

      # @return [String] The distinguished name.
      attr_accessor :dn


      #
      # Mapper for ImportError class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'ImportError',
          type: {
            name: 'Composite',
            class_name: 'ImportError',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              run_step_result_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'runStepResultId',
                type: {
                  name: 'String'
                }
              },
              connector_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'connectorId',
                type: {
                  name: 'String'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              time_occurred: {
                client_side_validation: true,
                required: false,
                serialized_name: 'timeOccurred',
                type: {
                  name: 'DateTime'
                }
              },
              time_first_occurred: {
                client_side_validation: true,
                required: false,
                serialized_name: 'timeFirstOccurred',
                type: {
                  name: 'DateTime'
                }
              },
              retry_count: {
                client_side_validation: true,
                required: false,
                serialized_name: 'retryCount',
                type: {
                  name: 'Number'
                }
              },
              algorithm_step_type: {
                client_side_validation: true,
                required: false,
                serialized_name: 'algorithmStepType',
                type: {
                  name: 'String'
                }
              },
              change_not_reimported: {
                client_side_validation: true,
                required: false,
                serialized_name: 'changeNotReimported',
                type: {
                  name: 'Composite',
                  class_name: 'ChangeNotReimported'
                }
              },
              extension_error_info: {
                client_side_validation: true,
                required: false,
                serialized_name: 'extensionErrorInfo',
                type: {
                  name: 'Composite',
                  class_name: 'ExtensionErrorInfo'
                }
              },
              rule_error_info: {
                client_side_validation: true,
                required: false,
                serialized_name: 'ruleErrorInfo',
                type: {
                  name: 'Composite',
                  class_name: 'RuleErrorInfo'
                }
              },
              cs_object_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'csObjectId',
                type: {
                  name: 'String'
                }
              },
              dn: {
                client_side_validation: true,
                required: false,
                serialized_name: 'dn',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
