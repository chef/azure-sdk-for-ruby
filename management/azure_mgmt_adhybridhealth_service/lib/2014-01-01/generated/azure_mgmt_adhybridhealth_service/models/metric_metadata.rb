# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ADHybridHealthService::Mgmt::V2014_01_01
  module Models
    #
    # The metric meta data
    #
    class MetricMetadata

      include MsRestAzure

      # @return [String] The name of the class which retrieve and process the
      # metric.
      attr_accessor :metrics_processor_class_name

      # @return [String] The metric name
      attr_accessor :metric_name

      # @return [Array<MetricGroup>] The groupings for the metrics.
      attr_accessor :groupings

      # @return [String] The display name for the metric.
      attr_accessor :display_name

      # @return [String] Indicates if the metrics is a rate,value, percent or
      # duration type.
      attr_accessor :value_kind

      # @return [Integer] The minimum value.
      attr_accessor :min_value

      # @return [Integer] The maximum value.
      attr_accessor :max_value

      # @return [String] Indicates whether the dashboard to represent the
      # metric is a line, bar,pie, area or donut chart.
      attr_accessor :kind

      # @return [Boolean] Indicates if the metric is a default metric or not.
      attr_accessor :is_default

      # @return [Boolean] Indicates if the metric is a performance counter
      # metric or not.
      attr_accessor :is_perf_counter

      # @return [Boolean] Indicates if the metric is visible to DevOps or not.
      attr_accessor :is_dev_ops


      #
      # Mapper for MetricMetadata class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'MetricMetadata',
          type: {
            name: 'Composite',
            class_name: 'MetricMetadata',
            model_properties: {
              metrics_processor_class_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'metricsProcessorClassName',
                type: {
                  name: 'String'
                }
              },
              metric_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'metricName',
                type: {
                  name: 'String'
                }
              },
              groupings: {
                client_side_validation: true,
                required: false,
                serialized_name: 'groupings',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'MetricGroupElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'MetricGroup'
                      }
                  }
                }
              },
              display_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'displayName',
                type: {
                  name: 'String'
                }
              },
              value_kind: {
                client_side_validation: true,
                required: false,
                serialized_name: 'valueKind',
                type: {
                  name: 'String'
                }
              },
              min_value: {
                client_side_validation: true,
                required: false,
                serialized_name: 'minValue',
                type: {
                  name: 'Number'
                }
              },
              max_value: {
                client_side_validation: true,
                required: false,
                serialized_name: 'maxValue',
                type: {
                  name: 'Number'
                }
              },
              kind: {
                client_side_validation: true,
                required: false,
                serialized_name: 'kind',
                type: {
                  name: 'String'
                }
              },
              is_default: {
                client_side_validation: true,
                required: false,
                serialized_name: 'isDefault',
                type: {
                  name: 'Boolean'
                }
              },
              is_perf_counter: {
                client_side_validation: true,
                required: false,
                serialized_name: 'isPerfCounter',
                type: {
                  name: 'Boolean'
                }
              },
              is_dev_ops: {
                client_side_validation: true,
                required: false,
                serialized_name: 'isDevOps',
                type: {
                  name: 'Boolean'
                }
              }
            }
          }
        }
      end
    end
  end
end
