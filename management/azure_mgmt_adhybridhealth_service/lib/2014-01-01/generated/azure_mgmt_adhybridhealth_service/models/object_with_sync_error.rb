# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ADHybridHealthService::Mgmt::V2014_01_01
  module Models
    #
    # The objects with sync errors.
    #
    class ObjectWithSyncError

      include MsRestAzure

      # @return [String] The source of authority.
      attr_accessor :source_of_authority

      # @return [String] The display name.
      attr_accessor :display_name

      # @return [String] The object type.
      attr_accessor :object_type

      # @return [String] The attribute name.
      attr_accessor :attribute_name

      # @return [String] The attribute value.
      attr_accessor :attribute_value

      # @return [String] The modified value.
      attr_accessor :modififed_value

      # @return [String] The user principal name.
      attr_accessor :user_principal_name

      # @return [String] The object guid.
      attr_accessor :object_guid

      # @return [Boolean] Indicates if the attribute is multi-valued or not.
      attr_accessor :attribute_multi_values

      # @return [String] The minimum limit.
      attr_accessor :min_limit

      # @return [String] The maximum limit.
      attr_accessor :max_limit

      # @return [String] The distinguished name.
      attr_accessor :distinguished_name

      # @return [String] The email.
      attr_accessor :mail

      # @return [DateTime] The date and time of occurrence.
      attr_accessor :time_occured

      # @return [String] The error type.
      attr_accessor :error_type

      # @return [String] The source anchor.
      attr_accessor :source_anchor


      #
      # Mapper for ObjectWithSyncError class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'ObjectWithSyncError',
          type: {
            name: 'Composite',
            class_name: 'ObjectWithSyncError',
            model_properties: {
              source_of_authority: {
                client_side_validation: true,
                required: false,
                serialized_name: 'sourceOfAuthority',
                type: {
                  name: 'String'
                }
              },
              display_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'displayName',
                type: {
                  name: 'String'
                }
              },
              object_type: {
                client_side_validation: true,
                required: false,
                serialized_name: 'objectType',
                type: {
                  name: 'String'
                }
              },
              attribute_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'attributeName',
                type: {
                  name: 'String'
                }
              },
              attribute_value: {
                client_side_validation: true,
                required: false,
                serialized_name: 'attributeValue',
                type: {
                  name: 'String'
                }
              },
              modififed_value: {
                client_side_validation: true,
                required: false,
                serialized_name: 'modififedValue',
                type: {
                  name: 'String'
                }
              },
              user_principal_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'userPrincipalName',
                type: {
                  name: 'String'
                }
              },
              object_guid: {
                client_side_validation: true,
                required: false,
                serialized_name: 'objectGuid',
                type: {
                  name: 'String'
                }
              },
              attribute_multi_values: {
                client_side_validation: true,
                required: false,
                serialized_name: 'attributeMultiValues',
                type: {
                  name: 'Boolean'
                }
              },
              min_limit: {
                client_side_validation: true,
                required: false,
                serialized_name: 'minLimit',
                type: {
                  name: 'String'
                }
              },
              max_limit: {
                client_side_validation: true,
                required: false,
                serialized_name: 'maxLimit',
                type: {
                  name: 'String'
                }
              },
              distinguished_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'distinguishedName',
                type: {
                  name: 'String'
                }
              },
              mail: {
                client_side_validation: true,
                required: false,
                serialized_name: 'mail',
                type: {
                  name: 'String'
                }
              },
              time_occured: {
                client_side_validation: true,
                required: false,
                serialized_name: 'timeOccured',
                type: {
                  name: 'DateTime'
                }
              },
              error_type: {
                client_side_validation: true,
                required: false,
                serialized_name: 'errorType',
                type: {
                  name: 'String'
                }
              },
              source_anchor: {
                client_side_validation: true,
                required: false,
                serialized_name: 'sourceAnchor',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
