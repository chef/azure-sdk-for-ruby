# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ADHybridHealthService::Mgmt::V2014_01_01
  module Models
    #
    # The service properties for a given service.
    #
    class ServiceProperties

      include MsRestAzure

      # @return [String] The id of the service.
      attr_accessor :id

      # @return [Integer] The count of alerts that are currently active for the
      # service.
      attr_accessor :active_alerts

      # @return [String] The additional information related to the service.
      attr_accessor :additional_information

      # @return [DateTime] The date and time, in UTC, when the service was
      # onboarded to Azure Active Directory Connect Health.
      attr_accessor :created_date

      # @return [Array<String>] The list of additional emails that are
      # configured to receive notifications about the service.
      attr_accessor :custom_notification_emails

      # @return [Boolean] Indicates if the service is disabled or not.
      attr_accessor :disabled

      # @return [String] The display name of the service.
      attr_accessor :display_name

      # @return [String] The health of the service.
      attr_accessor :health

      # @return [DateTime] The date and time, in UTC, when the service was last
      # disabled.
      attr_accessor :last_disabled

      # @return [DateTime] The date or time , in UTC, when the service
      # properties were last updated.
      attr_accessor :last_updated

      # @return The monitoring configuration of the service which determines
      # what activities are monitored by Azure Active Directory Connect Health.
      attr_accessor :monitoring_configurations_computed

      # @return The customized monitoring configuration of the service which
      # determines what activities are monitored by Azure Active Directory
      # Connect Health.
      attr_accessor :monitoring_configurations_customized

      # @return [Boolean] Indicates if email notification is enabled or not.
      attr_accessor :notification_email_enabled

      # @return [Boolean] Indicates if email notification is enabled for global
      # administrators of the tenant.
      attr_accessor :notification_email_enabled_for_global_admins

      # @return [Boolean] Indicates if email notification is enabled for global
      # administrators of the tenant.
      attr_accessor :notification_emails_enabled_for_global_admins

      # @return [Array<String>] The list of emails to whom service
      # notifications will be sent.
      attr_accessor :notification_emails

      # @return [Boolean] Gets the original disable state.
      attr_accessor :original_disabled_state

      # @return [Integer] The total count of alerts that has been resolved for
      # the service.
      attr_accessor :resolved_alerts

      # @return [String] The id of the service.
      attr_accessor :service_id

      # @return [String] The name of the service.
      attr_accessor :service_name

      # @return [String] The signature of the service.
      attr_accessor :signature

      # @return List of service specific configuration properties.
      attr_accessor :simple_properties

      # @return [String] The id of the tenant to which the service is
      # registered to.
      attr_accessor :tenant_id

      # @return [String] The service type for the services onboarded to Azure
      # Active Directory Connect Health. Depending on whether the service is
      # monitoring, ADFS, Sync or ADDS roles, the service type can either be
      # AdFederationService or AadSyncService or AdDomainService.
      attr_accessor :type


      #
      # Mapper for ServiceProperties class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'ServiceProperties',
          type: {
            name: 'Composite',
            class_name: 'ServiceProperties',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              active_alerts: {
                client_side_validation: true,
                required: false,
                serialized_name: 'activeAlerts',
                type: {
                  name: 'Number'
                }
              },
              additional_information: {
                client_side_validation: true,
                required: false,
                serialized_name: 'additionalInformation',
                type: {
                  name: 'String'
                }
              },
              created_date: {
                client_side_validation: true,
                required: false,
                serialized_name: 'createdDate',
                type: {
                  name: 'DateTime'
                }
              },
              custom_notification_emails: {
                client_side_validation: true,
                required: false,
                serialized_name: 'customNotificationEmails',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              disabled: {
                client_side_validation: true,
                required: false,
                serialized_name: 'disabled',
                type: {
                  name: 'Boolean'
                }
              },
              display_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'displayName',
                type: {
                  name: 'String'
                }
              },
              health: {
                client_side_validation: true,
                required: false,
                serialized_name: 'health',
                type: {
                  name: 'String'
                }
              },
              last_disabled: {
                client_side_validation: true,
                required: false,
                serialized_name: 'lastDisabled',
                type: {
                  name: 'DateTime'
                }
              },
              last_updated: {
                client_side_validation: true,
                required: false,
                serialized_name: 'lastUpdated',
                type: {
                  name: 'DateTime'
                }
              },
              monitoring_configurations_computed: {
                client_side_validation: true,
                required: false,
                serialized_name: 'monitoringConfigurationsComputed',
                type: {
                  name: 'Object'
                }
              },
              monitoring_configurations_customized: {
                client_side_validation: true,
                required: false,
                serialized_name: 'monitoringConfigurationsCustomized',
                type: {
                  name: 'Object'
                }
              },
              notification_email_enabled: {
                client_side_validation: true,
                required: false,
                serialized_name: 'notificationEmailEnabled',
                type: {
                  name: 'Boolean'
                }
              },
              notification_email_enabled_for_global_admins: {
                client_side_validation: true,
                required: false,
                serialized_name: 'notificationEmailEnabledForGlobalAdmins',
                type: {
                  name: 'Boolean'
                }
              },
              notification_emails_enabled_for_global_admins: {
                client_side_validation: true,
                required: false,
                serialized_name: 'notificationEmailsEnabledForGlobalAdmins',
                type: {
                  name: 'Boolean'
                }
              },
              notification_emails: {
                client_side_validation: true,
                required: false,
                serialized_name: 'notificationEmails',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              original_disabled_state: {
                client_side_validation: true,
                required: false,
                serialized_name: 'originalDisabledState',
                type: {
                  name: 'Boolean'
                }
              },
              resolved_alerts: {
                client_side_validation: true,
                required: false,
                serialized_name: 'resolvedAlerts',
                type: {
                  name: 'Number'
                }
              },
              service_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'serviceId',
                type: {
                  name: 'String'
                }
              },
              service_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'serviceName',
                type: {
                  name: 'String'
                }
              },
              signature: {
                client_side_validation: true,
                required: false,
                serialized_name: 'signature',
                type: {
                  name: 'String'
                }
              },
              simple_properties: {
                client_side_validation: true,
                required: false,
                serialized_name: 'simpleProperties',
                type: {
                  name: 'Object'
                }
              },
              tenant_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'tenantId',
                type: {
                  name: 'String'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
