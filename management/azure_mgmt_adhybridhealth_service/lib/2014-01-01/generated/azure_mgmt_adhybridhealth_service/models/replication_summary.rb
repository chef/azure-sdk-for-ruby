# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ADHybridHealthService::Mgmt::V2014_01_01
  module Models
    #
    # The replication summary for a domain controller.
    #
    class ReplicationSummary

      include MsRestAzure

      # @return [String] The domain controller name.
      attr_accessor :target_server

      # @return [String] The site name for a given domain controller.
      attr_accessor :site

      # @return [String] The domain name for a given domain controller.
      attr_accessor :domain

      # @return [Integer] The health status for a domain controller.
      attr_accessor :status

      # @return [DateTime] The last time when a sync was attempted for a given
      # domain controller.
      attr_accessor :last_attempted_sync

      # @return [DateTime] The time when the last successful sync happened for
      # a given domain controller.
      attr_accessor :last_successful_sync

      # @return [Array<InboundReplicationNeighbor>] List of individual domain
      # controller neighbor's inbound replication status.
      attr_accessor :inbound_neighbor_collection


      #
      # Mapper for ReplicationSummary class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'ReplicationSummary',
          type: {
            name: 'Composite',
            class_name: 'ReplicationSummary',
            model_properties: {
              target_server: {
                client_side_validation: true,
                required: false,
                serialized_name: 'targetServer',
                type: {
                  name: 'String'
                }
              },
              site: {
                client_side_validation: true,
                required: false,
                serialized_name: 'site',
                type: {
                  name: 'String'
                }
              },
              domain: {
                client_side_validation: true,
                required: false,
                serialized_name: 'domain',
                type: {
                  name: 'String'
                }
              },
              status: {
                client_side_validation: true,
                required: false,
                serialized_name: 'status',
                type: {
                  name: 'Number'
                }
              },
              last_attempted_sync: {
                client_side_validation: true,
                required: false,
                serialized_name: 'lastAttemptedSync',
                type: {
                  name: 'DateTime'
                }
              },
              last_successful_sync: {
                client_side_validation: true,
                required: false,
                serialized_name: 'lastSuccessfulSync',
                type: {
                  name: 'DateTime'
                }
              },
              inbound_neighbor_collection: {
                client_side_validation: true,
                required: false,
                serialized_name: 'inboundNeighborCollection',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'InboundReplicationNeighborElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'InboundReplicationNeighbor'
                      }
                  }
                }
              }
            }
          }
        }
      end
    end
  end
end
