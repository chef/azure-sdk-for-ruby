# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::DataFactory::Mgmt::V2018_06_01
  module Models
    #
    # Query filter option for listing runs.
    #
    class RunQueryFilter

      include MsRestAzure

      # @return [RunQueryFilterOperand] Parameter name to be used for filter.
      # The allowed operands to query pipeline runs are PipelineName, RunStart,
      # RunEnd and Status; to query activity runs are ActivityName,
      # ActivityRunStart, ActivityRunEnd, ActivityType and Status, and to query
      # trigger runs are TriggerName, TriggerRunTimestamp and Status. Possible
      # values include: 'PipelineName', 'Status', 'RunStart', 'RunEnd',
      # 'ActivityName', 'ActivityRunStart', 'ActivityRunEnd', 'ActivityType',
      # 'TriggerName', 'TriggerRunTimestamp', 'RunGroupId', 'LatestOnly'
      attr_accessor :operand

      # @return [RunQueryFilterOperator] Operator to be used for filter.
      # Possible values include: 'Equals', 'NotEquals', 'In', 'NotIn'
      attr_accessor :operator

      # @return [Array<String>] List of filter values.
      attr_accessor :values


      #
      # Mapper for RunQueryFilter class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'RunQueryFilter',
          type: {
            name: 'Composite',
            class_name: 'RunQueryFilter',
            model_properties: {
              operand: {
                client_side_validation: true,
                required: true,
                serialized_name: 'operand',
                type: {
                  name: 'String'
                }
              },
              operator: {
                client_side_validation: true,
                required: true,
                serialized_name: 'operator',
                type: {
                  name: 'String'
                }
              },
              values: {
                client_side_validation: true,
                required: true,
                serialized_name: 'values',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              }
            }
          }
        }
      end
    end
  end
end
