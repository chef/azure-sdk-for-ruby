# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::DataFactory::Mgmt::V2017_09_01_preview
  module Models
    #
    # The Azure Data Factory nested object which identifies data within
    # different data stores, such as tables, files, folders, and documents.
    #
    class Dataset

      include MsRestAzure

      @@discriminatorMap = Hash.new
      @@discriminatorMap["ResponsysObject"] = "ResponsysObjectDataset"
      @@discriminatorMap["SalesforceMarketingCloudObject"] = "SalesforceMarketingCloudObjectDataset"
      @@discriminatorMap["VerticaTable"] = "VerticaTableDataset"
      @@discriminatorMap["NetezzaTable"] = "NetezzaTableDataset"
      @@discriminatorMap["ZohoObject"] = "ZohoObjectDataset"
      @@discriminatorMap["XeroObject"] = "XeroObjectDataset"
      @@discriminatorMap["SquareObject"] = "SquareObjectDataset"
      @@discriminatorMap["SparkObject"] = "SparkObjectDataset"
      @@discriminatorMap["ShopifyObject"] = "ShopifyObjectDataset"
      @@discriminatorMap["ServiceNowObject"] = "ServiceNowObjectDataset"
      @@discriminatorMap["QuickBooksObject"] = "QuickBooksObjectDataset"
      @@discriminatorMap["PrestoObject"] = "PrestoObjectDataset"
      @@discriminatorMap["PhoenixObject"] = "PhoenixObjectDataset"
      @@discriminatorMap["PaypalObject"] = "PaypalObjectDataset"
      @@discriminatorMap["MarketoObject"] = "MarketoObjectDataset"
      @@discriminatorMap["MariaDBTable"] = "MariaDBTableDataset"
      @@discriminatorMap["MagentoObject"] = "MagentoObjectDataset"
      @@discriminatorMap["JiraObject"] = "JiraObjectDataset"
      @@discriminatorMap["ImpalaObject"] = "ImpalaObjectDataset"
      @@discriminatorMap["HubspotObject"] = "HubspotObjectDataset"
      @@discriminatorMap["HiveObject"] = "HiveObjectDataset"
      @@discriminatorMap["HBaseObject"] = "HBaseObjectDataset"
      @@discriminatorMap["GreenplumTable"] = "GreenplumTableDataset"
      @@discriminatorMap["GoogleBigQueryObject"] = "GoogleBigQueryObjectDataset"
      @@discriminatorMap["EloquaObject"] = "EloquaObjectDataset"
      @@discriminatorMap["DrillTable"] = "DrillTableDataset"
      @@discriminatorMap["CouchbaseTable"] = "CouchbaseTableDataset"
      @@discriminatorMap["ConcurObject"] = "ConcurObjectDataset"
      @@discriminatorMap["AzurePostgreSqlTable"] = "AzurePostgreSqlTableDataset"
      @@discriminatorMap["AmazonMWSObject"] = "AmazonMWSObjectDataset"
      @@discriminatorMap["HttpFile"] = "HttpDataset"
      @@discriminatorMap["AzureSearchIndex"] = "AzureSearchIndexDataset"
      @@discriminatorMap["WebTable"] = "WebTableDataset"
      @@discriminatorMap["SqlServerTable"] = "SqlServerTableDataset"
      @@discriminatorMap["SapEccResource"] = "SapEccResourceDataset"
      @@discriminatorMap["SapCloudForCustomerResource"] = "SapCloudForCustomerResourceDataset"
      @@discriminatorMap["SalesforceObject"] = "SalesforceObjectDataset"
      @@discriminatorMap["RelationalTable"] = "RelationalTableDataset"
      @@discriminatorMap["AzureMySqlTable"] = "AzureMySqlTableDataset"
      @@discriminatorMap["OracleTable"] = "OracleTableDataset"
      @@discriminatorMap["ODataResource"] = "ODataResourceDataset"
      @@discriminatorMap["MongoDbCollection"] = "MongoDbCollectionDataset"
      @@discriminatorMap["FileShare"] = "FileShareDataset"
      @@discriminatorMap["AzureDataLakeStoreFile"] = "AzureDataLakeStoreDataset"
      @@discriminatorMap["DynamicsEntity"] = "DynamicsEntityDataset"
      @@discriminatorMap["DocumentDbCollection"] = "DocumentDbCollectionDataset"
      @@discriminatorMap["CustomDataset"] = "CustomDataset"
      @@discriminatorMap["CassandraTable"] = "CassandraTableDataset"
      @@discriminatorMap["AzureSqlDWTable"] = "AzureSqlDWTableDataset"
      @@discriminatorMap["AzureSqlTable"] = "AzureSqlTableDataset"
      @@discriminatorMap["AzureTable"] = "AzureTableDataset"
      @@discriminatorMap["AzureBlob"] = "AzureBlobDataset"
      @@discriminatorMap["AmazonS3Object"] = "AmazonS3Dataset"

      def initialize
        @type = "Dataset"
      end

      attr_accessor :type

      # @return Unmatched properties from the message are deserialized this
      # collection
      attr_accessor :additional_properties

      # @return [String] Dataset description.
      attr_accessor :description

      # @return Columns that define the structure of the dataset. Type: array
      # (or Expression with resultType array), itemType: DatasetDataElement.
      attr_accessor :structure

      # @return [LinkedServiceReference] Linked service reference.
      attr_accessor :linked_service_name

      # @return [Hash{String => ParameterSpecification}] Parameters for
      # dataset.
      attr_accessor :parameters

      # @return List of tags that can be used for describing the Dataset.
      attr_accessor :annotations


      #
      # Mapper for Dataset class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'Dataset',
          type: {
            name: 'Composite',
            polymorphic_discriminator: 'type',
            uber_parent: 'Dataset',
            class_name: 'Dataset',
            model_properties: {
              additional_properties: {
                client_side_validation: true,
                required: false,
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ObjectElementType',
                      type: {
                        name: 'Object'
                      }
                  }
                }
              },
              description: {
                client_side_validation: true,
                required: false,
                serialized_name: 'description',
                type: {
                  name: 'String'
                }
              },
              structure: {
                client_side_validation: true,
                required: false,
                serialized_name: 'structure',
                type: {
                  name: 'Object'
                }
              },
              linked_service_name: {
                client_side_validation: true,
                required: true,
                serialized_name: 'linkedServiceName',
                default_value: {},
                type: {
                  name: 'Composite',
                  class_name: 'LinkedServiceReference'
                }
              },
              parameters: {
                client_side_validation: true,
                required: false,
                serialized_name: 'parameters',
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ParameterSpecificationElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'ParameterSpecification'
                      }
                  }
                }
              },
              annotations: {
                client_side_validation: true,
                required: false,
                serialized_name: 'annotations',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ObjectElementType',
                      type: {
                        name: 'Object'
                      }
                  }
                }
              }
            }
          }
        }
      end
    end
  end
end
