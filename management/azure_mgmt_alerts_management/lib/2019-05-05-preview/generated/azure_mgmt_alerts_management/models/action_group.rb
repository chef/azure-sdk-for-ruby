# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::AlertsManagement::Mgmt::V2019_05_05_preview
  module Models
    #
    # Action Group based Action Rule

    # Action rule with action group configuration
    #
    class ActionGroup < ActionRuleProperties

      include MsRestAzure


      def initialize
        @type = "ActionGroup"
      end

      attr_accessor :type

      # @return [String] Action group to trigger if action rule matches
      attr_accessor :action_group_id


      #
      # Mapper for ActionGroup class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'ActionGroup',
          type: {
            name: 'Composite',
            class_name: 'ActionGroup',
            model_properties: {
              scope: {
                client_side_validation: true,
                required: false,
                serialized_name: 'scope',
                type: {
                  name: 'Composite',
                  class_name: 'Scope'
                }
              },
              conditions: {
                client_side_validation: true,
                required: false,
                serialized_name: 'conditions',
                type: {
                  name: 'Composite',
                  class_name: 'Conditions'
                }
              },
              description: {
                client_side_validation: true,
                required: false,
                serialized_name: 'description',
                type: {
                  name: 'String'
                }
              },
              created_at: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'createdAt',
                type: {
                  name: 'DateTime'
                }
              },
              last_modified_at: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'lastModifiedAt',
                type: {
                  name: 'DateTime'
                }
              },
              created_by: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'createdBy',
                type: {
                  name: 'String'
                }
              },
              last_modified_by: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'lastModifiedBy',
                type: {
                  name: 'String'
                }
              },
              status: {
                client_side_validation: true,
                required: false,
                serialized_name: 'status',
                type: {
                  name: 'String'
                }
              },
              type: {
                client_side_validation: true,
                required: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              action_group_id: {
                client_side_validation: true,
                required: true,
                serialized_name: 'actionGroupId',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
