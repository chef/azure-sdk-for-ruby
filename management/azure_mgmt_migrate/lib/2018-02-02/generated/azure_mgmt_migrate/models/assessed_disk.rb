# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Migrate::Mgmt::V2018_02_02
  module Models
    #
    # A disk assessed for an assessment.
    #
    class AssessedDisk

      include MsRestAzure

      # @return [String] Name of the assessed disk.
      attr_accessor :name

      # @return [Float] Gigabytes of storage provisioned for this disk.
      attr_accessor :gigabytes_provisioned

      # @return [Float] Gigabytes of storage consumed by this disk.
      attr_accessor :gigabytes_consumed

      # @return [Float] Disk throughput in MegaBytes per second.
      attr_accessor :megabytes_per_second_of_read

      # @return [Integer] Expected data points for MegaBytes per second of
      # read.
      attr_accessor :megabytes_per_second_of_read_data_points_expected

      # @return [Integer] Received data points for MegaBytes per second of
      # read.
      attr_accessor :megabytes_per_second_of_read_data_points_received

      # @return [Float] Disk throughput in MegaBytes per second.
      attr_accessor :megabytes_per_second_of_write

      # @return [Integer] Expected data points for MegaBytes per second of
      # write.
      attr_accessor :megabytes_per_second_of_write_data_points_expected

      # @return [Integer] Received data points for MegaBytes per second of
      # write.
      attr_accessor :megabytes_per_second_of_write_data_points_received

      # @return [Float] Number of read operations per second for the disk.
      attr_accessor :number_of_read_operations_per_second

      # @return [Integer] Expected number of data points for read operations
      # per second.
      attr_accessor :number_of_read_operations_per_second_data_points_expected

      # @return [Integer] Received number of data points for read operations
      # per second.
      attr_accessor :number_of_read_operations_per_second_data_points_received

      # @return [Float] Number of read and write operations per second for the
      # disk.
      attr_accessor :number_of_write_operations_per_second

      # @return [Integer] Expected number of data points for write operations
      # per second.
      attr_accessor :number_of_write_operations_per_second_data_points_expected

      # @return [Integer] Received number of data points for write operations
      # per second.
      attr_accessor :number_of_write_operations_per_second_data_points_received

      # @return [Float] Estimated aggregate storage cost for a 31-day month for
      # this disk.
      attr_accessor :monthly_storage_cost

      # @return [AzureDiskType] Storage type selected for this disk. Possible
      # values include: 'Unknown', 'Standard', 'Premium'
      attr_accessor :recommended_disk_type

      # @return [AzureDiskSize] Recommended Azure size for the disk, given
      # utilization data and preferences set on Assessment. Possible values
      # include: 'Unknown', 'Standard_S4', 'Standard_S6', 'Standard_S10',
      # 'Standard_S20', 'Standard_S30', 'Standard_S40', 'Standard_S50',
      # 'Premium_P4', 'Premium_P6', 'Premium_P10', 'Premium_P20',
      # 'Premium_P30', 'Premium_P40', 'Premium_P50'
      attr_accessor :recommended_disk_size

      # @return [Integer] Gigabytes of storage provided by the recommended
      # Azure disk size.
      attr_accessor :gigabytes_for_recommended_disk_size

      # @return [CloudSuitability] Whether this disk is suitable for Azure.
      # Possible values include: 'Unknown', 'NotSuitable', 'Suitable',
      # 'ConditionallySuitable', 'ReadinessUnknown'
      attr_accessor :suitability

      # @return [AzureDiskSuitabilityExplanation] If disk is suitable, this
      # explains the reasons and mitigation steps. Possible values include:
      # 'Unknown', 'NotApplicable', 'DiskSizeGreaterThanSupported',
      # 'NoSuitableDiskSizeForIops', 'NoSuitableDiskSizeForThroughput',
      # 'NoDiskSizeFoundInSelectedLocation',
      # 'NoDiskSizeFoundForSelectedRedundancy',
      # 'InternalErrorOccurredForDiskEvaluation'
      attr_accessor :suitability_explanation


      #
      # Mapper for AssessedDisk class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'AssessedDisk',
          type: {
            name: 'Composite',
            class_name: 'AssessedDisk',
            model_properties: {
              name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              gigabytes_provisioned: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'gigabytesProvisioned',
                type: {
                  name: 'Double'
                }
              },
              gigabytes_consumed: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'gigabytesConsumed',
                type: {
                  name: 'Double'
                }
              },
              megabytes_per_second_of_read: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'megabytesPerSecondOfRead',
                type: {
                  name: 'Double'
                }
              },
              megabytes_per_second_of_read_data_points_expected: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'megabytesPerSecondOfReadDataPointsExpected',
                type: {
                  name: 'Number'
                }
              },
              megabytes_per_second_of_read_data_points_received: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'megabytesPerSecondOfReadDataPointsReceived',
                type: {
                  name: 'Number'
                }
              },
              megabytes_per_second_of_write: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'megabytesPerSecondOfWrite',
                type: {
                  name: 'Double'
                }
              },
              megabytes_per_second_of_write_data_points_expected: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'megabytesPerSecondOfWriteDataPointsExpected',
                type: {
                  name: 'Number'
                }
              },
              megabytes_per_second_of_write_data_points_received: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'megabytesPerSecondOfWriteDataPointsReceived',
                type: {
                  name: 'Number'
                }
              },
              number_of_read_operations_per_second: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'numberOfReadOperationsPerSecond',
                type: {
                  name: 'Double'
                }
              },
              number_of_read_operations_per_second_data_points_expected: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'numberOfReadOperationsPerSecondDataPointsExpected',
                type: {
                  name: 'Number'
                }
              },
              number_of_read_operations_per_second_data_points_received: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'numberOfReadOperationsPerSecondDataPointsReceived',
                type: {
                  name: 'Number'
                }
              },
              number_of_write_operations_per_second: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'numberOfWriteOperationsPerSecond',
                type: {
                  name: 'Double'
                }
              },
              number_of_write_operations_per_second_data_points_expected: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'numberOfWriteOperationsPerSecondDataPointsExpected',
                type: {
                  name: 'Number'
                }
              },
              number_of_write_operations_per_second_data_points_received: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'numberOfWriteOperationsPerSecondDataPointsReceived',
                type: {
                  name: 'Number'
                }
              },
              monthly_storage_cost: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'monthlyStorageCost',
                type: {
                  name: 'Double'
                }
              },
              recommended_disk_type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'recommendedDiskType',
                type: {
                  name: 'String'
                }
              },
              recommended_disk_size: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'recommendedDiskSize',
                type: {
                  name: 'String'
                }
              },
              gigabytes_for_recommended_disk_size: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'gigabytesForRecommendedDiskSize',
                type: {
                  name: 'Number'
                }
              },
              suitability: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'suitability',
                type: {
                  name: 'String'
                }
              },
              suitability_explanation: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'suitabilityExplanation',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
