# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::SQL::Mgmt::V2017_03_01_preview
  module Models
    #
    # An ImportExport operation result resource.
    #
    class ImportExportOperationResult < ProxyResource

      include MsRestAzure

      # @return Request Id.
      attr_accessor :request_id

      # @return [String] Request type.
      attr_accessor :request_type

      # @return [String] Queued time.
      attr_accessor :queued_time

      # @return [String] Last modified time.
      attr_accessor :last_modified_time

      # @return [String] Blob Uri.
      attr_accessor :blob_uri

      # @return [String] Server name.
      attr_accessor :server_name

      # @return [String] Database name.
      attr_accessor :database_name

      # @return [String] Operation status.
      attr_accessor :status

      # @return [String] Error message.
      attr_accessor :error_message


      #
      # Mapper for ImportExportOperationResult class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'ImportExportOperationResult',
          type: {
            name: 'Composite',
            class_name: 'ImportExportOperationResult',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              request_id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.requestId',
                type: {
                  name: 'String'
                }
              },
              request_type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.requestType',
                type: {
                  name: 'String'
                }
              },
              queued_time: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.queuedTime',
                type: {
                  name: 'String'
                }
              },
              last_modified_time: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.lastModifiedTime',
                type: {
                  name: 'String'
                }
              },
              blob_uri: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.blobUri',
                type: {
                  name: 'String'
                }
              },
              server_name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.serverName',
                type: {
                  name: 'String'
                }
              },
              database_name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.databaseName',
                type: {
                  name: 'String'
                }
              },
              status: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.status',
                type: {
                  name: 'String'
                }
              },
              error_message: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.errorMessage',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
