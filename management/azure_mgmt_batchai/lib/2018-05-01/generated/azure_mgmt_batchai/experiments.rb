# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::BatchAI::Mgmt::V2018_05_01
  #
  # The Azure BatchAI Management API.
  #
  class Experiments
    include MsRestAzure

    #
    # Creates and initializes a new instance of the Experiments class.
    # @param client service class for accessing basic functionality.
    #
    def initialize(client)
      @client = client
    end

    # @return [BatchAIManagementClient] reference to the BatchAIManagementClient
    attr_reader :client

    #
    # Gets a list of Experiments within the specified Workspace.
    #
    # @param resource_group_name [String] Name of the resource group to which the
    # resource belongs.
    # @param workspace_name [String] The name of the workspace. Workspace names can
    # only contain a combination of alphanumeric characters along with dash (-) and
    # underscore (_). The name must be from 1 through 64 characters long.
    # @param experiments_list_by_workspace_options
    # [ExperimentsListByWorkspaceOptions] Additional parameters for the operation
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    # @return [Array<Experiment>] operation results.
    #
    def list_by_workspace(resource_group_name, workspace_name, experiments_list_by_workspace_options:nil, custom_headers:nil)
      first_page = list_by_workspace_as_lazy(resource_group_name, workspace_name, experiments_list_by_workspace_options:experiments_list_by_workspace_options, custom_headers:custom_headers)
      first_page.get_all_items
    end

    #
    # Gets a list of Experiments within the specified Workspace.
    #
    # @param resource_group_name [String] Name of the resource group to which the
    # resource belongs.
    # @param workspace_name [String] The name of the workspace. Workspace names can
    # only contain a combination of alphanumeric characters along with dash (-) and
    # underscore (_). The name must be from 1 through 64 characters long.
    # @param experiments_list_by_workspace_options
    # [ExperimentsListByWorkspaceOptions] Additional parameters for the operation
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    # @return [MsRestAzure::AzureOperationResponse] HTTP response information.
    #
    def list_by_workspace_with_http_info(resource_group_name, workspace_name, experiments_list_by_workspace_options:nil, custom_headers:nil)
      list_by_workspace_async(resource_group_name, workspace_name, experiments_list_by_workspace_options:experiments_list_by_workspace_options, custom_headers:custom_headers).value!
    end

    #
    # Gets a list of Experiments within the specified Workspace.
    #
    # @param resource_group_name [String] Name of the resource group to which the
    # resource belongs.
    # @param workspace_name [String] The name of the workspace. Workspace names can
    # only contain a combination of alphanumeric characters along with dash (-) and
    # underscore (_). The name must be from 1 through 64 characters long.
    # @param experiments_list_by_workspace_options
    # [ExperimentsListByWorkspaceOptions] Additional parameters for the operation
    # @param [Hash{String => String}] A hash of custom headers that will be added
    # to the HTTP request.
    #
    # @return [Concurrent::Promise] Promise object which holds the HTTP response.
    #
    def list_by_workspace_async(resource_group_name, workspace_name, experiments_list_by_workspace_options:nil, custom_headers:nil)
      fail ArgumentError, 'resource_group_name is nil' if resource_group_name.nil?
      fail ArgumentError, "'resource_group_name' should satisfy the constraint - 'Pattern': '^[-\w\._]+$'" if !resource_group_name.nil? && resource_group_name.match(Regexp.new('^^[-\w\._]+$$')).nil?
      fail ArgumentError, 'workspace_name is nil' if workspace_name.nil?
      fail ArgumentError, "'workspace_name' should satisfy the constraint - 'MaxLength': '64'" if !workspace_name.nil? && workspace_name.length > 64
      fail ArgumentError, "'workspace_name' should satisfy the constraint - 'MinLength': '1'" if !workspace_name.nil? && workspace_name.length < 1
      fail ArgumentError, "'workspace_name' should satisfy the constraint - 'Pattern': '^[-\w_]+$'" if !workspace_name.nil? && workspace_name.match(Regexp.new('^^[-\w_]+$$')).nil?
      fail ArgumentError, '@client.api_version is nil' if @client.api_version.nil?
      fail ArgumentError, '@client.subscription_id is nil' if @client.subscription_id.nil?

      max_results = nil
      unless experiments_list_by_workspace_options.nil?
        max_results = experiments_list_by_workspace_options.maxResults
      end

      request_headers = {}
      request_headers['Content-Type'] = 'application/json; charset=utf-8'

      # Set Headers
      request_headers['x-ms-client-request-id'] = SecureRandom.uuid
      request_headers['accept-language'] = @client.accept_language unless @client.accept_language.nil?
      path_template = 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/workspaces/{workspaceName}/experiments'

      request_url = @base_url || @client.base_url

      options = {
          middlewares: [[MsRest::RetryPolicyMiddleware, times: 3, retry: 0.02], [:cookie_jar]],
          path_params: {'resourceGroupName' => resource_group_name,'workspaceName' => workspace_name,'subscriptionId' => @client.subscription_id},
          query_params: {'api-version' => @client.api_version,'maxresults' => max_results},
          headers: request_headers.merge(custom_headers || {}),
          base_url: request_url
      }
      promise = @client.make_request_async(:get, path_template, options)

      promise = promise.then do |result|
        http_response = result.response
        status_code = http_response.status
        response_content = http_response.body
        unless status_code == 200
          error_model = JSON.load(response_content)
          fail MsRestAzure::AzureOperationError.new(result.request, http_response, error_model)
        end

        result.request_id = http_response['x-ms-request-id'] unless http_response['x-ms-request-id'].nil?
        result.correlation_request_id = http_response['x-ms-correlation-request-id'] unless http_response['x-ms-correlation-request-id'].nil?
        result.client_request_id = http_response['x-ms-client-request-id'] unless http_response['x-ms-client-request-id'].nil?
        # Deserialize Response
        if status_code == 200
          begin
            parsed_response = response_content.to_s.empty? ? nil : JSON.load(response_content)
            result_mapper = Azure::BatchAI::Mgmt::V2018_05_01::Models::ExperimentListResult.mapper()
            result.body = @client.deserialize(result_mapper, parsed_response)
          rescue Exception => e
            fail MsRest::DeserializationError.new('Error occurred in deserializing the response', e.message, e.backtrace, result)
          end
        end

        result
      end

      promise.execute
    end

    #
    # Creates an Experiment.
    #
    # @param resource_group_name [String] Name of the resource group to which the
    # resource belongs.
    # @param workspace_name [String] The name of the workspace. Workspace names can
    # only contain a combination of alphanumeric characters along with dash (-) and
    # underscore (_). The name must be from 1 through 64 characters long.
    # @param experiment_name [String] The name of the experiment. Experiment names
    # can only contain a combination of alphanumeric characters along with dash (-)
    # and underscore (_). The name must be from 1 through 64 characters long.
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    # @return [Experiment] operation results.
    #
    def create(resource_group_name, workspace_name, experiment_name, custom_headers:nil)
      response = create_async(resource_group_name, workspace_name, experiment_name, custom_headers:custom_headers).value!
      response.body unless response.nil?
    end

    #
    # @param resource_group_name [String] Name of the resource group to which the
    # resource belongs.
    # @param workspace_name [String] The name of the workspace. Workspace names can
    # only contain a combination of alphanumeric characters along with dash (-) and
    # underscore (_). The name must be from 1 through 64 characters long.
    # @param experiment_name [String] The name of the experiment. Experiment names
    # can only contain a combination of alphanumeric characters along with dash (-)
    # and underscore (_). The name must be from 1 through 64 characters long.
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    # @return [Concurrent::Promise] promise which provides async access to http
    # response.
    #
    def create_async(resource_group_name, workspace_name, experiment_name, custom_headers:nil)
      # Send request
      promise = begin_create_async(resource_group_name, workspace_name, experiment_name, custom_headers:custom_headers)

      promise = promise.then do |response|
        # Defining deserialization method.
        deserialize_method = lambda do |parsed_response|
          result_mapper = Azure::BatchAI::Mgmt::V2018_05_01::Models::Experiment.mapper()
          parsed_response = @client.deserialize(result_mapper, parsed_response)
        end

        # Waiting for response.
        @client.get_long_running_operation_result(response, deserialize_method)
      end

      promise
    end

    #
    # Deletes an Experiment.
    #
    # @param resource_group_name [String] Name of the resource group to which the
    # resource belongs.
    # @param workspace_name [String] The name of the workspace. Workspace names can
    # only contain a combination of alphanumeric characters along with dash (-) and
    # underscore (_). The name must be from 1 through 64 characters long.
    # @param experiment_name [String] The name of the experiment. Experiment names
    # can only contain a combination of alphanumeric characters along with dash (-)
    # and underscore (_). The name must be from 1 through 64 characters long.
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    def delete(resource_group_name, workspace_name, experiment_name, custom_headers:nil)
      response = delete_async(resource_group_name, workspace_name, experiment_name, custom_headers:custom_headers).value!
      nil
    end

    #
    # @param resource_group_name [String] Name of the resource group to which the
    # resource belongs.
    # @param workspace_name [String] The name of the workspace. Workspace names can
    # only contain a combination of alphanumeric characters along with dash (-) and
    # underscore (_). The name must be from 1 through 64 characters long.
    # @param experiment_name [String] The name of the experiment. Experiment names
    # can only contain a combination of alphanumeric characters along with dash (-)
    # and underscore (_). The name must be from 1 through 64 characters long.
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    # @return [Concurrent::Promise] promise which provides async access to http
    # response.
    #
    def delete_async(resource_group_name, workspace_name, experiment_name, custom_headers:nil)
      # Send request
      promise = begin_delete_async(resource_group_name, workspace_name, experiment_name, custom_headers:custom_headers)

      promise = promise.then do |response|
        # Defining deserialization method.
        deserialize_method = lambda do |parsed_response|
        end

        # Waiting for response.
        @client.get_long_running_operation_result(response, deserialize_method)
      end

      promise
    end

    #
    # Gets information about an Experiment.
    #
    # @param resource_group_name [String] Name of the resource group to which the
    # resource belongs.
    # @param workspace_name [String] The name of the workspace. Workspace names can
    # only contain a combination of alphanumeric characters along with dash (-) and
    # underscore (_). The name must be from 1 through 64 characters long.
    # @param experiment_name [String] The name of the experiment. Experiment names
    # can only contain a combination of alphanumeric characters along with dash (-)
    # and underscore (_). The name must be from 1 through 64 characters long.
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    # @return [Experiment] operation results.
    #
    def get(resource_group_name, workspace_name, experiment_name, custom_headers:nil)
      response = get_async(resource_group_name, workspace_name, experiment_name, custom_headers:custom_headers).value!
      response.body unless response.nil?
    end

    #
    # Gets information about an Experiment.
    #
    # @param resource_group_name [String] Name of the resource group to which the
    # resource belongs.
    # @param workspace_name [String] The name of the workspace. Workspace names can
    # only contain a combination of alphanumeric characters along with dash (-) and
    # underscore (_). The name must be from 1 through 64 characters long.
    # @param experiment_name [String] The name of the experiment. Experiment names
    # can only contain a combination of alphanumeric characters along with dash (-)
    # and underscore (_). The name must be from 1 through 64 characters long.
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    # @return [MsRestAzure::AzureOperationResponse] HTTP response information.
    #
    def get_with_http_info(resource_group_name, workspace_name, experiment_name, custom_headers:nil)
      get_async(resource_group_name, workspace_name, experiment_name, custom_headers:custom_headers).value!
    end

    #
    # Gets information about an Experiment.
    #
    # @param resource_group_name [String] Name of the resource group to which the
    # resource belongs.
    # @param workspace_name [String] The name of the workspace. Workspace names can
    # only contain a combination of alphanumeric characters along with dash (-) and
    # underscore (_). The name must be from 1 through 64 characters long.
    # @param experiment_name [String] The name of the experiment. Experiment names
    # can only contain a combination of alphanumeric characters along with dash (-)
    # and underscore (_). The name must be from 1 through 64 characters long.
    # @param [Hash{String => String}] A hash of custom headers that will be added
    # to the HTTP request.
    #
    # @return [Concurrent::Promise] Promise object which holds the HTTP response.
    #
    def get_async(resource_group_name, workspace_name, experiment_name, custom_headers:nil)
      fail ArgumentError, 'resource_group_name is nil' if resource_group_name.nil?
      fail ArgumentError, "'resource_group_name' should satisfy the constraint - 'Pattern': '^[-\w\._]+$'" if !resource_group_name.nil? && resource_group_name.match(Regexp.new('^^[-\w\._]+$$')).nil?
      fail ArgumentError, 'workspace_name is nil' if workspace_name.nil?
      fail ArgumentError, "'workspace_name' should satisfy the constraint - 'MaxLength': '64'" if !workspace_name.nil? && workspace_name.length > 64
      fail ArgumentError, "'workspace_name' should satisfy the constraint - 'MinLength': '1'" if !workspace_name.nil? && workspace_name.length < 1
      fail ArgumentError, "'workspace_name' should satisfy the constraint - 'Pattern': '^[-\w_]+$'" if !workspace_name.nil? && workspace_name.match(Regexp.new('^^[-\w_]+$$')).nil?
      fail ArgumentError, 'experiment_name is nil' if experiment_name.nil?
      fail ArgumentError, "'experiment_name' should satisfy the constraint - 'MaxLength': '64'" if !experiment_name.nil? && experiment_name.length > 64
      fail ArgumentError, "'experiment_name' should satisfy the constraint - 'MinLength': '1'" if !experiment_name.nil? && experiment_name.length < 1
      fail ArgumentError, "'experiment_name' should satisfy the constraint - 'Pattern': '^[-\w_]+$'" if !experiment_name.nil? && experiment_name.match(Regexp.new('^^[-\w_]+$$')).nil?
      fail ArgumentError, '@client.api_version is nil' if @client.api_version.nil?
      fail ArgumentError, '@client.subscription_id is nil' if @client.subscription_id.nil?


      request_headers = {}
      request_headers['Content-Type'] = 'application/json; charset=utf-8'

      # Set Headers
      request_headers['x-ms-client-request-id'] = SecureRandom.uuid
      request_headers['accept-language'] = @client.accept_language unless @client.accept_language.nil?
      path_template = 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/workspaces/{workspaceName}/experiments/{experimentName}'

      request_url = @base_url || @client.base_url

      options = {
          middlewares: [[MsRest::RetryPolicyMiddleware, times: 3, retry: 0.02], [:cookie_jar]],
          path_params: {'resourceGroupName' => resource_group_name,'workspaceName' => workspace_name,'experimentName' => experiment_name,'subscriptionId' => @client.subscription_id},
          query_params: {'api-version' => @client.api_version},
          headers: request_headers.merge(custom_headers || {}),
          base_url: request_url
      }
      promise = @client.make_request_async(:get, path_template, options)

      promise = promise.then do |result|
        http_response = result.response
        status_code = http_response.status
        response_content = http_response.body
        unless status_code == 200
          error_model = JSON.load(response_content)
          fail MsRestAzure::AzureOperationError.new(result.request, http_response, error_model)
        end

        result.request_id = http_response['x-ms-request-id'] unless http_response['x-ms-request-id'].nil?
        result.correlation_request_id = http_response['x-ms-correlation-request-id'] unless http_response['x-ms-correlation-request-id'].nil?
        result.client_request_id = http_response['x-ms-client-request-id'] unless http_response['x-ms-client-request-id'].nil?
        # Deserialize Response
        if status_code == 200
          begin
            parsed_response = response_content.to_s.empty? ? nil : JSON.load(response_content)
            result_mapper = Azure::BatchAI::Mgmt::V2018_05_01::Models::Experiment.mapper()
            result.body = @client.deserialize(result_mapper, parsed_response)
          rescue Exception => e
            fail MsRest::DeserializationError.new('Error occurred in deserializing the response', e.message, e.backtrace, result)
          end
        end

        result
      end

      promise.execute
    end

    #
    # Creates an Experiment.
    #
    # @param resource_group_name [String] Name of the resource group to which the
    # resource belongs.
    # @param workspace_name [String] The name of the workspace. Workspace names can
    # only contain a combination of alphanumeric characters along with dash (-) and
    # underscore (_). The name must be from 1 through 64 characters long.
    # @param experiment_name [String] The name of the experiment. Experiment names
    # can only contain a combination of alphanumeric characters along with dash (-)
    # and underscore (_). The name must be from 1 through 64 characters long.
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    # @return [Experiment] operation results.
    #
    def begin_create(resource_group_name, workspace_name, experiment_name, custom_headers:nil)
      response = begin_create_async(resource_group_name, workspace_name, experiment_name, custom_headers:custom_headers).value!
      response.body unless response.nil?
    end

    #
    # Creates an Experiment.
    #
    # @param resource_group_name [String] Name of the resource group to which the
    # resource belongs.
    # @param workspace_name [String] The name of the workspace. Workspace names can
    # only contain a combination of alphanumeric characters along with dash (-) and
    # underscore (_). The name must be from 1 through 64 characters long.
    # @param experiment_name [String] The name of the experiment. Experiment names
    # can only contain a combination of alphanumeric characters along with dash (-)
    # and underscore (_). The name must be from 1 through 64 characters long.
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    # @return [MsRestAzure::AzureOperationResponse] HTTP response information.
    #
    def begin_create_with_http_info(resource_group_name, workspace_name, experiment_name, custom_headers:nil)
      begin_create_async(resource_group_name, workspace_name, experiment_name, custom_headers:custom_headers).value!
    end

    #
    # Creates an Experiment.
    #
    # @param resource_group_name [String] Name of the resource group to which the
    # resource belongs.
    # @param workspace_name [String] The name of the workspace. Workspace names can
    # only contain a combination of alphanumeric characters along with dash (-) and
    # underscore (_). The name must be from 1 through 64 characters long.
    # @param experiment_name [String] The name of the experiment. Experiment names
    # can only contain a combination of alphanumeric characters along with dash (-)
    # and underscore (_). The name must be from 1 through 64 characters long.
    # @param [Hash{String => String}] A hash of custom headers that will be added
    # to the HTTP request.
    #
    # @return [Concurrent::Promise] Promise object which holds the HTTP response.
    #
    def begin_create_async(resource_group_name, workspace_name, experiment_name, custom_headers:nil)
      fail ArgumentError, 'resource_group_name is nil' if resource_group_name.nil?
      fail ArgumentError, "'resource_group_name' should satisfy the constraint - 'Pattern': '^[-\w\._]+$'" if !resource_group_name.nil? && resource_group_name.match(Regexp.new('^^[-\w\._]+$$')).nil?
      fail ArgumentError, 'workspace_name is nil' if workspace_name.nil?
      fail ArgumentError, "'workspace_name' should satisfy the constraint - 'MaxLength': '64'" if !workspace_name.nil? && workspace_name.length > 64
      fail ArgumentError, "'workspace_name' should satisfy the constraint - 'MinLength': '1'" if !workspace_name.nil? && workspace_name.length < 1
      fail ArgumentError, "'workspace_name' should satisfy the constraint - 'Pattern': '^[-\w_]+$'" if !workspace_name.nil? && workspace_name.match(Regexp.new('^^[-\w_]+$$')).nil?
      fail ArgumentError, 'experiment_name is nil' if experiment_name.nil?
      fail ArgumentError, "'experiment_name' should satisfy the constraint - 'MaxLength': '64'" if !experiment_name.nil? && experiment_name.length > 64
      fail ArgumentError, "'experiment_name' should satisfy the constraint - 'MinLength': '1'" if !experiment_name.nil? && experiment_name.length < 1
      fail ArgumentError, "'experiment_name' should satisfy the constraint - 'Pattern': '^[-\w_]+$'" if !experiment_name.nil? && experiment_name.match(Regexp.new('^^[-\w_]+$$')).nil?
      fail ArgumentError, '@client.api_version is nil' if @client.api_version.nil?
      fail ArgumentError, '@client.subscription_id is nil' if @client.subscription_id.nil?


      request_headers = {}
      request_headers['Content-Type'] = 'application/json; charset=utf-8'

      # Set Headers
      request_headers['x-ms-client-request-id'] = SecureRandom.uuid
      request_headers['accept-language'] = @client.accept_language unless @client.accept_language.nil?
      path_template = 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/workspaces/{workspaceName}/experiments/{experimentName}'

      request_url = @base_url || @client.base_url

      options = {
          middlewares: [[MsRest::RetryPolicyMiddleware, times: 3, retry: 0.02], [:cookie_jar]],
          path_params: {'resourceGroupName' => resource_group_name,'workspaceName' => workspace_name,'experimentName' => experiment_name,'subscriptionId' => @client.subscription_id},
          query_params: {'api-version' => @client.api_version},
          headers: request_headers.merge(custom_headers || {}),
          base_url: request_url
      }
      promise = @client.make_request_async(:put, path_template, options)

      promise = promise.then do |result|
        http_response = result.response
        status_code = http_response.status
        response_content = http_response.body
        unless status_code == 200 || status_code == 202
          error_model = JSON.load(response_content)
          fail MsRestAzure::AzureOperationError.new(result.request, http_response, error_model)
        end

        result.request_id = http_response['x-ms-request-id'] unless http_response['x-ms-request-id'].nil?
        result.correlation_request_id = http_response['x-ms-correlation-request-id'] unless http_response['x-ms-correlation-request-id'].nil?
        result.client_request_id = http_response['x-ms-client-request-id'] unless http_response['x-ms-client-request-id'].nil?
        # Deserialize Response
        if status_code == 200
          begin
            parsed_response = response_content.to_s.empty? ? nil : JSON.load(response_content)
            result_mapper = Azure::BatchAI::Mgmt::V2018_05_01::Models::Experiment.mapper()
            result.body = @client.deserialize(result_mapper, parsed_response)
          rescue Exception => e
            fail MsRest::DeserializationError.new('Error occurred in deserializing the response', e.message, e.backtrace, result)
          end
        end

        result
      end

      promise.execute
    end

    #
    # Deletes an Experiment.
    #
    # @param resource_group_name [String] Name of the resource group to which the
    # resource belongs.
    # @param workspace_name [String] The name of the workspace. Workspace names can
    # only contain a combination of alphanumeric characters along with dash (-) and
    # underscore (_). The name must be from 1 through 64 characters long.
    # @param experiment_name [String] The name of the experiment. Experiment names
    # can only contain a combination of alphanumeric characters along with dash (-)
    # and underscore (_). The name must be from 1 through 64 characters long.
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    #
    def begin_delete(resource_group_name, workspace_name, experiment_name, custom_headers:nil)
      response = begin_delete_async(resource_group_name, workspace_name, experiment_name, custom_headers:custom_headers).value!
      nil
    end

    #
    # Deletes an Experiment.
    #
    # @param resource_group_name [String] Name of the resource group to which the
    # resource belongs.
    # @param workspace_name [String] The name of the workspace. Workspace names can
    # only contain a combination of alphanumeric characters along with dash (-) and
    # underscore (_). The name must be from 1 through 64 characters long.
    # @param experiment_name [String] The name of the experiment. Experiment names
    # can only contain a combination of alphanumeric characters along with dash (-)
    # and underscore (_). The name must be from 1 through 64 characters long.
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    # @return [MsRestAzure::AzureOperationResponse] HTTP response information.
    #
    def begin_delete_with_http_info(resource_group_name, workspace_name, experiment_name, custom_headers:nil)
      begin_delete_async(resource_group_name, workspace_name, experiment_name, custom_headers:custom_headers).value!
    end

    #
    # Deletes an Experiment.
    #
    # @param resource_group_name [String] Name of the resource group to which the
    # resource belongs.
    # @param workspace_name [String] The name of the workspace. Workspace names can
    # only contain a combination of alphanumeric characters along with dash (-) and
    # underscore (_). The name must be from 1 through 64 characters long.
    # @param experiment_name [String] The name of the experiment. Experiment names
    # can only contain a combination of alphanumeric characters along with dash (-)
    # and underscore (_). The name must be from 1 through 64 characters long.
    # @param [Hash{String => String}] A hash of custom headers that will be added
    # to the HTTP request.
    #
    # @return [Concurrent::Promise] Promise object which holds the HTTP response.
    #
    def begin_delete_async(resource_group_name, workspace_name, experiment_name, custom_headers:nil)
      fail ArgumentError, 'resource_group_name is nil' if resource_group_name.nil?
      fail ArgumentError, "'resource_group_name' should satisfy the constraint - 'Pattern': '^[-\w\._]+$'" if !resource_group_name.nil? && resource_group_name.match(Regexp.new('^^[-\w\._]+$$')).nil?
      fail ArgumentError, 'workspace_name is nil' if workspace_name.nil?
      fail ArgumentError, "'workspace_name' should satisfy the constraint - 'MaxLength': '64'" if !workspace_name.nil? && workspace_name.length > 64
      fail ArgumentError, "'workspace_name' should satisfy the constraint - 'MinLength': '1'" if !workspace_name.nil? && workspace_name.length < 1
      fail ArgumentError, "'workspace_name' should satisfy the constraint - 'Pattern': '^[-\w_]+$'" if !workspace_name.nil? && workspace_name.match(Regexp.new('^^[-\w_]+$$')).nil?
      fail ArgumentError, 'experiment_name is nil' if experiment_name.nil?
      fail ArgumentError, "'experiment_name' should satisfy the constraint - 'MaxLength': '64'" if !experiment_name.nil? && experiment_name.length > 64
      fail ArgumentError, "'experiment_name' should satisfy the constraint - 'MinLength': '1'" if !experiment_name.nil? && experiment_name.length < 1
      fail ArgumentError, "'experiment_name' should satisfy the constraint - 'Pattern': '^[-\w_]+$'" if !experiment_name.nil? && experiment_name.match(Regexp.new('^^[-\w_]+$$')).nil?
      fail ArgumentError, '@client.api_version is nil' if @client.api_version.nil?
      fail ArgumentError, '@client.subscription_id is nil' if @client.subscription_id.nil?


      request_headers = {}
      request_headers['Content-Type'] = 'application/json; charset=utf-8'

      # Set Headers
      request_headers['x-ms-client-request-id'] = SecureRandom.uuid
      request_headers['accept-language'] = @client.accept_language unless @client.accept_language.nil?
      path_template = 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/workspaces/{workspaceName}/experiments/{experimentName}'

      request_url = @base_url || @client.base_url

      options = {
          middlewares: [[MsRest::RetryPolicyMiddleware, times: 3, retry: 0.02], [:cookie_jar]],
          path_params: {'resourceGroupName' => resource_group_name,'workspaceName' => workspace_name,'experimentName' => experiment_name,'subscriptionId' => @client.subscription_id},
          query_params: {'api-version' => @client.api_version},
          headers: request_headers.merge(custom_headers || {}),
          base_url: request_url
      }
      promise = @client.make_request_async(:delete, path_template, options)

      promise = promise.then do |result|
        http_response = result.response
        status_code = http_response.status
        response_content = http_response.body
        unless status_code == 200 || status_code == 202 || status_code == 204
          error_model = JSON.load(response_content)
          fail MsRestAzure::AzureOperationError.new(result.request, http_response, error_model)
        end

        result.request_id = http_response['x-ms-request-id'] unless http_response['x-ms-request-id'].nil?
        result.correlation_request_id = http_response['x-ms-correlation-request-id'] unless http_response['x-ms-correlation-request-id'].nil?
        result.client_request_id = http_response['x-ms-client-request-id'] unless http_response['x-ms-client-request-id'].nil?

        result
      end

      promise.execute
    end

    #
    # Gets a list of Experiments within the specified Workspace.
    #
    # @param next_page_link [String] The NextLink from the previous successful call
    # to List operation.
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    # @return [ExperimentListResult] operation results.
    #
    def list_by_workspace_next(next_page_link, custom_headers:nil)
      response = list_by_workspace_next_async(next_page_link, custom_headers:custom_headers).value!
      response.body unless response.nil?
    end

    #
    # Gets a list of Experiments within the specified Workspace.
    #
    # @param next_page_link [String] The NextLink from the previous successful call
    # to List operation.
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    # @return [MsRestAzure::AzureOperationResponse] HTTP response information.
    #
    def list_by_workspace_next_with_http_info(next_page_link, custom_headers:nil)
      list_by_workspace_next_async(next_page_link, custom_headers:custom_headers).value!
    end

    #
    # Gets a list of Experiments within the specified Workspace.
    #
    # @param next_page_link [String] The NextLink from the previous successful call
    # to List operation.
    # @param [Hash{String => String}] A hash of custom headers that will be added
    # to the HTTP request.
    #
    # @return [Concurrent::Promise] Promise object which holds the HTTP response.
    #
    def list_by_workspace_next_async(next_page_link, custom_headers:nil)
      fail ArgumentError, 'next_page_link is nil' if next_page_link.nil?


      request_headers = {}
      request_headers['Content-Type'] = 'application/json; charset=utf-8'

      # Set Headers
      request_headers['x-ms-client-request-id'] = SecureRandom.uuid
      request_headers['accept-language'] = @client.accept_language unless @client.accept_language.nil?
      path_template = '{nextLink}'

      request_url = @base_url || @client.base_url

      options = {
          middlewares: [[MsRest::RetryPolicyMiddleware, times: 3, retry: 0.02], [:cookie_jar]],
          skip_encoding_path_params: {'nextLink' => next_page_link},
          headers: request_headers.merge(custom_headers || {}),
          base_url: request_url
      }
      promise = @client.make_request_async(:get, path_template, options)

      promise = promise.then do |result|
        http_response = result.response
        status_code = http_response.status
        response_content = http_response.body
        unless status_code == 200
          error_model = JSON.load(response_content)
          fail MsRestAzure::AzureOperationError.new(result.request, http_response, error_model)
        end

        result.request_id = http_response['x-ms-request-id'] unless http_response['x-ms-request-id'].nil?
        result.correlation_request_id = http_response['x-ms-correlation-request-id'] unless http_response['x-ms-correlation-request-id'].nil?
        result.client_request_id = http_response['x-ms-client-request-id'] unless http_response['x-ms-client-request-id'].nil?
        # Deserialize Response
        if status_code == 200
          begin
            parsed_response = response_content.to_s.empty? ? nil : JSON.load(response_content)
            result_mapper = Azure::BatchAI::Mgmt::V2018_05_01::Models::ExperimentListResult.mapper()
            result.body = @client.deserialize(result_mapper, parsed_response)
          rescue Exception => e
            fail MsRest::DeserializationError.new('Error occurred in deserializing the response', e.message, e.backtrace, result)
          end
        end

        result
      end

      promise.execute
    end

    #
    # Gets a list of Experiments within the specified Workspace.
    #
    # @param resource_group_name [String] Name of the resource group to which the
    # resource belongs.
    # @param workspace_name [String] The name of the workspace. Workspace names can
    # only contain a combination of alphanumeric characters along with dash (-) and
    # underscore (_). The name must be from 1 through 64 characters long.
    # @param experiments_list_by_workspace_options
    # [ExperimentsListByWorkspaceOptions] Additional parameters for the operation
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    # @return [ExperimentListResult] which provide lazy access to pages of the
    # response.
    #
    def list_by_workspace_as_lazy(resource_group_name, workspace_name, experiments_list_by_workspace_options:nil, custom_headers:nil)
      response = list_by_workspace_async(resource_group_name, workspace_name, experiments_list_by_workspace_options:experiments_list_by_workspace_options, custom_headers:custom_headers).value!
      unless response.nil?
        page = response.body
        page.next_method = Proc.new do |next_page_link|
          list_by_workspace_next_async(next_page_link, custom_headers:custom_headers)
        end
        page
      end
    end

  end
end
