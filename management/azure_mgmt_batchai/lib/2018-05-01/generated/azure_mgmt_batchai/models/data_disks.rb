# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::BatchAI::Mgmt::V2018_05_01
  module Models
    #
    # Data disks settings.
    #
    class DataDisks

      include MsRestAzure

      # @return [Integer] Disk size in GB. Disk size in GB for the blank data
      # disks.
      attr_accessor :disk_size_in_gb

      # @return [CachingType] Caching type. Caching type for the disks.
      # Available values are none (default), readonly, readwrite. Caching type
      # can be set only for VM sizes supporting premium storage. Possible
      # values include: 'none', 'readonly', 'readwrite'. Default value: 'none'
      # .
      attr_accessor :caching_type

      # @return [Integer] Number of data disks. Number of data disks attached
      # to the File Server. If multiple disks attached, they will be configured
      # in RAID level 0.
      attr_accessor :disk_count

      # @return [StorageAccountType] Storage account type. Type of storage
      # account to be used on the disk. Possible values are: Standard_LRS or
      # Premium_LRS. Premium storage account type can only be used with VM
      # sizes supporting premium storage. Possible values include:
      # 'Standard_LRS', 'Premium_LRS'
      attr_accessor :storage_account_type


      #
      # Mapper for DataDisks class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'DataDisks',
          type: {
            name: 'Composite',
            class_name: 'DataDisks',
            model_properties: {
              disk_size_in_gb: {
                client_side_validation: true,
                required: true,
                serialized_name: 'diskSizeInGB',
                type: {
                  name: 'Number'
                }
              },
              caching_type: {
                client_side_validation: true,
                required: false,
                serialized_name: 'cachingType',
                default_value: 'none',
                type: {
                  name: 'Enum',
                  module: 'CachingType'
                }
              },
              disk_count: {
                client_side_validation: true,
                required: true,
                serialized_name: 'diskCount',
                type: {
                  name: 'Number'
                }
              },
              storage_account_type: {
                client_side_validation: true,
                required: true,
                serialized_name: 'storageAccountType',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
