# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::BatchAI::Mgmt::V2017_09_01_preview
  module Models
    #
    # Details of the File Server.
    #
    class MountSettings

      include MsRestAzure

      # @return [String] Path where the NFS is mounted on the Server.
      attr_accessor :mount_point

      # @return [String] Public IP of the File Server VM.
      attr_accessor :file_server_public_ip

      # @return [String] Internal subnet IP which can be used to access the
      # file Server from within the subnet.
      attr_accessor :file_server_internal_ip

      # @return [FileServerType] Type of the fileserver e.g. nfs, glusterfs
      # etc. Possible values include: 'nfs', 'glusterfs'
      attr_accessor :file_server_type


      #
      # Mapper for MountSettings class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'MountSettings',
          type: {
            name: 'Composite',
            class_name: 'MountSettings',
            model_properties: {
              mount_point: {
                client_side_validation: true,
                required: false,
                serialized_name: 'mountPoint',
                type: {
                  name: 'String'
                }
              },
              file_server_public_ip: {
                client_side_validation: true,
                required: false,
                serialized_name: 'fileServerPublicIP',
                type: {
                  name: 'String'
                }
              },
              file_server_internal_ip: {
                client_side_validation: true,
                required: false,
                serialized_name: 'fileServerInternalIP',
                type: {
                  name: 'String'
                }
              },
              file_server_type: {
                client_side_validation: true,
                required: false,
                serialized_name: 'fileServerType',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
